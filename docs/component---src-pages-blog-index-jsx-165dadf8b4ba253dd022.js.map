{"version":3,"file":"component---src-pages-blog-index-jsx-165dadf8b4ba253dd022.js","mappings":"qIAgBA,IAbeA,IACbC,EAAAA,cAAA,UAAQC,GAAG,SAASC,UAAU,sBAC5BF,EAAAA,cAAA,OAAKE,UAAU,SACbF,EAAAA,cAAA,MAAIE,UAAU,QACZF,EAAAA,cAAA,UAAI,gCACJA,EAAAA,cAAA,UAAI,oBACeA,EAAAA,cAAA,KAAGG,KAAK,sBAAqB,e,+CCSxD,IAfeC,IACbJ,EAAAA,cAAA,UAAQC,GAAG,UACTD,EAAAA,cAAA,WACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UACEA,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAG,KAAI,SAEfN,EAAAA,cAAA,UACEA,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAG,UAAS,W,+CCqB5B,IA3BeC,IAAA,IAAC,SAAEC,GAAUD,EAAA,OAC1BP,EAAAA,cAACS,EAAAA,YAAW,CACVC,MAAK,aASLC,OAAQC,GACNZ,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,QAAMa,KAAK,MACTb,EAAAA,cAAA,YACEA,EAAAA,cAAA,WAAMQ,OAKd,C,sHCRJ,MAdiBD,IAAA,IAAC,KAAEO,GAAMP,EAAA,OACxBP,EAAAA,cAAA,WACEA,EAAAA,cAAA,UACEA,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAI,SAAWQ,EAAKC,YAAYC,MACnCF,EAAKC,YAAYE,MAAM,KACrBH,EAAKC,YAAYG,OAGxBlB,EAAAA,cAAA,SACGc,EAAKK,SAEJ,E,8BCLD,MAAMC,EAAOA,IAClBpB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAO,mBACPA,EAAAA,cAAA,QAAMqB,KAAK,cAAcC,QAAQ,6BACjCtB,EAAAA,cAAA,QAAMqB,KAAK,WAAWC,QAAQ,6BAC9BtB,EAAAA,cAAA,QAAMqB,KAAK,SAASC,QAAQ,6BAC5BtB,EAAAA,cAAA,QAAMqB,KAAK,UAAUC,QAAQ,aAoCjC,MAhCkBf,IAIX,IAHLK,MACEW,mBAAmB,MAAEC,KAExBjB,EACC,OACEP,EAAAA,cAACyB,EAAAA,EAAM,KACLzB,EAAAA,cAACI,EAAAA,EAAM,MACPJ,EAAAA,cAAA,OAAKC,GAAG,WACND,EAAAA,cAAA,WAASC,GAAG,OAAOC,UAAU,WAC3BF,EAAAA,cAAA,OAAKE,UAAU,SACbF,EAAAA,cAAA,MAAIE,UAAU,SAAQ,eAGtBF,EAAAA,cAAA,SACEA,EAAAA,cAAA,UAAI,gEAENA,EAAAA,cAAA,WACGwB,EAAME,KAAKC,GAER3B,EAAAA,cAAC4B,EAAQ,CAACC,IAAKF,EAAKG,KAAK7B,GAAIa,KAAMa,EAAKG,aAOpD9B,EAAAA,cAACD,EAAAA,EAAM,MACA,C","sources":["webpack://bradito.me-site/./src/components/Footer.js","webpack://bradito.me-site/./src/components/Header.js","webpack://bradito.me-site/./src/components/layout.js","webpack://bradito.me-site/./src/components/PostLink.js","webpack://bradito.me-site/./src/pages/blog/index.jsx"],"sourcesContent":["import React from 'react';\n\nimport '../assets/sass/main.scss';\nconst Footer = () => (\n  <footer id=\"footer\" className=\"wrapper style1-alt\">\n    <div className=\"inner\">\n      <ul className=\"menu\">\n        <li>&copy; 2023. All rights reserved.</li>\n        <li>\n          Design template: <a href=\"http://html5up.net\">HTML5 UP</a>\n        </li>\n      </ul>\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport '../assets/sass/main.scss';\nconst Header = () => (\n  <header id=\"header\">\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Main</Link>\n        </li>\n        <li>\n          <Link to=\"/blog/\">Blog</Link>\n        </li>\n      </ul>\n    </nav>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport '../assets/sass/main.scss';\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <html lang=\"en\">\n          <body>\n            <div>{children}</div>\n          </body>\n        </html>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst PostLink = ({ post }) => (\n  <div>\n    <h4>\n      <Link to={\"/blog/\" + post.frontmatter.slug}>\n        {post.frontmatter.title}\n        - {post.frontmatter.date}\n      </Link>\n    </h4>\n    <p>\n      {post.excerpt}\n    </p>\n  </div>\n)\n\nexport default PostLink","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport PostLink from \"../../components/PostLink\"\n\n\nimport Layout from '../../components/layout';\nimport Footer from '../../components/Footer';\nimport Header from '../../components/Header';\n\nexport const Head = () => (\n  <>\n    <title>Blog - Brad Ito</title>\n    <meta name=\"description\" content=\"Brad Ito - Personal Blog\" />\n    <meta name=\"og:title\" content=\"Brad Ito - Personal Blog\" />\n    <meta name=\"og:url\" content=\"https://bradito.me/blog/\" />\n    <meta name=\"og:type\" content=\"website\" />\n  </>\n)\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  return (\n    <Layout>\n      <Header />\n      <div id=\"wrapper\">\n        <section id=\"main\" className=\"wrapper\">\n          <div className=\"inner\">\n            <h1 className=\"major\">\n              Brad's Blog\n            </h1>\n            <p>\n              <em>Thoughts on technology: applications, techniques and impact</em>\n            </p>\n            <div>\n              {edges.map((edge) => {\n                return (\n                  <PostLink key={edge.node.id} post={edge.node} />\n                )\n              })}\n            </div>\n          </div>\n        </section>\n      </div>\n      <Footer />\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { frontmatter: { date: DESC }},\n      filter: { frontmatter: { status: { eq: \"published\" }}}\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n            title\n          }\n        }\n      }\n    }\n  }\n`"],"names":["Footer","React","id","className","href","Header","Link","to","_ref","children","StaticQuery","query","render","data","lang","post","frontmatter","slug","title","date","excerpt","Head","name","content","allMarkdownRemark","edges","Layout","map","edge","PostLink","key","node"],"sourceRoot":""}